; Listing generated by Microsoft (R) Optimizing Compiler Version 19.00.23506.0 

	TITLE	D:\Projects\TaintAnalysis\AntiTaint\Epilog\src\func-rets.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	___local_stdio_printf_options
PUBLIC	__vfprintf_l
PUBLIC	_printf
PUBLIC	_func
PUBLIC	_main
EXTRN	__imp____acrt_iob_func:PROC
EXTRN	__imp____stdio_common_vfprintf:PROC
EXTRN	_gets:PROC
_DATA	SEGMENT
COMM	?_OptionsStorage@?1??__local_stdio_printf_options@@9@9:QWORD							; `__local_stdio_printf_options'::`2'::_OptionsStorage
_DATA	ENDS
; Function compile flags: /Ogtp
; File d:\projects\taintanalysis\antitaint\epilog\src\func-rets.c
;	COMDAT _main
_TEXT	SEGMENT
$T1 = -80						; size = 20
$T2 = -80						; size = 20
_b$ = -80						; size = 20
_a$2$ = -48						; size = 16
_b$2$ = -32						; size = 16
$T3 = -32						; size = 20
_main	PROC						; COMDAT

; 25   : {

	push	ebx
	mov	ebx, esp
	sub	esp, 8
	and	esp, -16				; fffffff0H
	add	esp, 4
	push	ebp
	mov	ebp, DWORD PTR [ebx+4]
	mov	DWORD PTR [esp+4], ebp
	mov	ebp, esp
	sub	esp, 80					; 00000050H

; 26   :   struct S a,b,c;
; 27   :   int z = 0;
; 28   :   a = func();

	lea	eax, DWORD PTR $T3[ebp]
	push	eax
	call	_func
	movups	xmm0, XMMWORD PTR [eax]

; 29   :   z += a.a;
; 30   :   b = func();

	lea	eax, DWORD PTR $T2[ebp]
	push	eax
	movaps	XMMWORD PTR _a$2$[ebp], xmm0
	call	_func
	movups	xmm0, XMMWORD PTR [eax]
	mov	eax, DWORD PTR [eax+16]
	mov	DWORD PTR _b$[ebp+16], eax

; 31   :   c = func();

	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	movaps	XMMWORD PTR _b$2$[ebp], xmm0
	call	_func

; 32   :   z += c.c + b.b;

	movaps	xmm1, XMMWORD PTR _b$2$[ebp]
	add	esp, 12					; 0000000cH
	psrldq	xmm1, 4
	movd	ecx, xmm1
	movups	xmm0, XMMWORD PTR [eax]
	psrldq	xmm0, 8
	movd	eax, xmm0
	movaps	xmm0, XMMWORD PTR _a$2$[ebp]
	add	eax, ecx
	movd	ecx, xmm0
	add	eax, ecx

; 33   :   return z;
; 34   : }

	mov	esp, ebp
	pop	ebp
	mov	esp, ebx
	pop	ebx
	ret	0
_main	ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File d:\projects\taintanalysis\antitaint\epilog\src\func-rets.c
;	COMDAT _func
_TEXT	SEGMENT
_buf$ = -8						; size = 8
$T1 = 8							; size = 4
_func	PROC						; COMDAT

; 15   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 16   :   char buf[8];
; 17   :   struct S s;
; 18   :   s.a = (int)gets(buf) - (int)buf;

	lea	eax, DWORD PTR _buf$[ebp]
	push	esi
	push	eax
	call	_gets
	mov	esi, DWORD PTR $T1[ebp]
	lea	ecx, DWORD PTR _buf$[ebp]
	sub	eax, ecx
	mov	DWORD PTR [esi], eax

; 19   :   s.b = printf(buf);

	mov	eax, ecx
	push	eax
	call	_printf

; 20   :   s.c = s.a + s.b;

	mov	ecx, DWORD PTR [esi]
	add	esp, 8
	add	ecx, eax
	mov	DWORD PTR [esi+4], eax
	mov	DWORD PTR [esi+8], ecx

; 21   :   return s;

	mov	eax, esi
	pop	esi

; 22   : }

	mov	esp, ebp
	pop	ebp
	ret	0
_func	ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\stdio.h
;	COMDAT _printf
_TEXT	SEGMENT
__Format$ = 8						; size = 4
_printf	PROC						; COMDAT

; 950  : {

	push	ebp
	mov	ebp, esp

; 951  :     int _Result;
; 952  :     va_list _ArgList;
; 953  :     __crt_va_start(_ArgList, _Format);
; 954  :     _Result = _vfprintf_l(stdout, _Format, NULL, _ArgList);

	lea	eax, DWORD PTR __Format$[ebp+4]
	push	eax
	push	0
	push	DWORD PTR __Format$[ebp]
	push	1
	call	DWORD PTR __imp____acrt_iob_func
	add	esp, 4
	push	eax
	call	__vfprintf_l
	add	esp, 16					; 00000010H

; 955  :     __crt_va_end(_ArgList);
; 956  :     return _Result;
; 957  : }

	pop	ebp
	ret	0
_printf	ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\stdio.h
;	COMDAT __vfprintf_l
_TEXT	SEGMENT
__Stream$ = 8						; size = 4
__Format$ = 12						; size = 4
__Locale$ = 16						; size = 4
__ArgList$ = 20						; size = 4
__vfprintf_l PROC					; COMDAT

; 638  : {

	push	ebp
	mov	ebp, esp

; 639  :     return __stdio_common_vfprintf(_CRT_INTERNAL_LOCAL_PRINTF_OPTIONS, _Stream, _Format, _Locale, _ArgList);

	push	DWORD PTR __ArgList$[ebp]
	push	DWORD PTR __Locale$[ebp]
	push	DWORD PTR __Format$[ebp]
	push	DWORD PTR __Stream$[ebp]
	call	___local_stdio_printf_options
	push	DWORD PTR [eax+4]
	push	DWORD PTR [eax]
	call	DWORD PTR __imp____stdio_common_vfprintf
	add	esp, 24					; 00000018H

; 640  : }

	pop	ebp
	ret	0
__vfprintf_l ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\corecrt_stdio_config.h
;	COMDAT ___local_stdio_printf_options
_TEXT	SEGMENT
___local_stdio_printf_options PROC			; COMDAT

; 74   :     static unsigned __int64 _OptionsStorage;
; 75   :     return &_OptionsStorage;

	mov	eax, OFFSET ?_OptionsStorage@?1??__local_stdio_printf_options@@9@9 ; `__local_stdio_printf_options'::`2'::_OptionsStorage

; 76   : }

	ret	0
___local_stdio_printf_options ENDP
_TEXT	ENDS
END
