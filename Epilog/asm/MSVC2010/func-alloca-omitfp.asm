; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	D:\Projects\TaintAnalysis\AntiTaint\Epilog\src\func-alloca.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

_DATA	SEGMENT
$SG3709	DB	'%d', 00H
_DATA	ENDS
PUBLIC	_func
EXTRN	__imp__printf:PROC
EXTRN	__imp__gets:PROC
EXTRN	__imp__scanf:PROC
EXTRN	__alloca_probe_16:PROC
; Function compile flags: /Odtpy
; File d:\projects\taintanalysis\antitaint\epilog\src\func-alloca.c
_TEXT	SEGMENT
tv68 = -12						; size = 4
_sz$ = -8						; size = 4
_buf$ = -4						; size = 4
_func	PROC

; 10   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 11   :   int sz;
; 12   :   char *buf;
; 13   :   scanf("%d", &sz);

	lea	eax, DWORD PTR _sz$[ebp]
	push	eax
	push	OFFSET $SG3709
	call	DWORD PTR __imp__scanf
	add	esp, 8

; 14   :   buf = (char*)alloca(sz);

	mov	eax, DWORD PTR _sz$[ebp]
	call	__alloca_probe_16
	mov	DWORD PTR tv68[ebp], esp
	mov	ecx, DWORD PTR tv68[ebp]
	mov	DWORD PTR _buf$[ebp], ecx

; 15   :   gets(buf);

	mov	edx, DWORD PTR _buf$[ebp]
	push	edx
	call	DWORD PTR __imp__gets
	add	esp, 4

; 16   :   printf(buf);

	mov	eax, DWORD PTR _buf$[ebp]
	push	eax
	call	DWORD PTR __imp__printf
	add	esp, 4

; 17   : }

	lea	esp, DWORD PTR [ebp-12]
	mov	esp, ebp
	pop	ebp
	ret	0
_func	ENDP
_TEXT	ENDS
PUBLIC	_main
; Function compile flags: /Odtpy
_TEXT	SEGMENT
_main	PROC

; 20   : {

	push	ebp
	mov	ebp, esp

; 21   :   func();

	call	_func

; 22   :   return 0;

	xor	eax, eax

; 23   : }

	pop	ebp
	ret	0
_main	ENDP
_TEXT	ENDS
END
